version: "3.9"
services:
  db:
    image: ankane/pgvector
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: building_ai
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pguser"]
      interval: 5s
      retries: 5

  backend:
    build: ..  # root Dockerfile builds both services
    environment:
      - USE_PGVECTOR=true
      - PG_CONN=postgresql+psycopg2://pguser:pgpass@db:5432/building_ai
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - PROMETHEUS_MULTIPROC_DIR=/tmp
    depends_on:
      db:
        condition: service_healthy
      otel-collector:
        condition: service_started
    ports:
      - "8501:8501"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.100.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"   # OTLP HTTP

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend 